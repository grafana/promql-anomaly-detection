groups:
  - name: AnomalyAdaptiveShortTerm
    rules:

      ################################################################################
      #                     Constants                                                #
      ################################################################################

      # The threshold used for filtering low variability periods, in combination with
      # the coefficient of variation.
      - record: anomaly:adaptive:threshold_by_covar
        expr: |-
          0.5

      # A threshold used to filter out sparse metrics, for which anomaly detection won't
      # work correctly.
      - record: anomaly:adaptive:sparse_threshold
        expr: |-
          5/60

      # The stddev multiplier for short term and long term bands.
      - record: anomaly:adaptive:stddev_multiplier
        expr: |-
          2

      # The stddev multiplier for margin bands.
      - record: anomaly:adaptive:margin_multiplier
        expr: |-
          0.5

      ################################################################################
      #                     Base Rules                                               #
      ################################################################################

      # The framework will take as input any metric tagged with the labels "anomaly_name" and "anomaly_type".
      # - "anomaly_name" uniquely identifies the metric within the anomaly detection framework.
      # - "anomaly_type" can be used to define independent thresholds for each metric type.
      # A filter is used to exclude metrics that are highly sparse.
      - record: anomaly:adaptive:select
        expr: |-
          (
            {anomaly_name!="", anomaly_type="requests", anomaly_select="", anomaly_strategy=~"^$|adaptive"} > 0
            unless avg_over_time({anomaly_name!="", anomaly_type="requests", anomaly_select="", anomaly_strategy=~"^$|adaptive"}[1h]) < on() group_left anomaly:adaptive:sparse_threshold
          )
          OR
          {anomaly_name!="", anomaly_type="latency", anomaly_select="", anomaly_strategy=~"^$|adaptive"} > 0
          OR
          {anomaly_name!="", anomaly_type="errors", anomaly_select="", anomaly_strategy=~"^$|adaptive"} > 0
          OR
          {anomaly_name!="", anomaly_type="resource", anomaly_select="", anomaly_strategy=~"^$|adaptive"} > 0
          OR
          {anomaly_name!="", anomaly_select="", anomaly_strategy=~"^$|adaptive"} > 0
        labels:
          anomaly_select: "1"
          anomaly_strategy: adaptive

      # The mid-line used used as the reference to calculate upper and lower bands.
      # 1 hour is a good compromise between smoothness and responsiveness.
      - record: anomaly:adaptive:avg_1h
        expr: |-
          avg_over_time(anomaly:adaptive:select[1h])

      # Stddev with a one hour time window and a high pass filter applied to it is used as the basis for
      # anomaly detection.
      # The stddev_1h acts as a measure of variability.
      # The high pass filter is used to increase its sensitivity by focusing on periods of high variability. It's calculation
      # is based on the coefficient of variation (relative standard deviation), which allows defining a threshold that
      # will work for metrics of any magnitude.
      - record: anomaly:adaptive:stddev_1h:filtered
        expr: |-
          stddev_over_time(anomaly:adaptive:select[1h]) > anomaly:adaptive:avg_1h * on() group_left anomaly:adaptive:threshold_by_covar

      # The filtered stddev_1h is smoothed over a 26 hour window to get the final short term bands. In combination with
      # the filtered standard deviation, it provides robust and stable bands that expand gently in the presence of extreme outliers.
      - record: anomaly:adaptive:stddev_st
        expr: |-
          avg_over_time(anomaly:adaptive:stddev_1h:filtered[26h])

      # The metric used to compare against the baselines to detect anomalies.
      - record: anomaly:level
        expr: |-
          anomaly:adaptive:select

      # Short term, margin and long term bands are combined to form the final bands used for anomaly detection.
      # Margin bands provide minimum width bands and are purely based on the avg_1h. They act as a fallback band for periods in which
      # short term bands do not exist due to very low variability.
      - record: anomaly:lower_band
        expr: |-
          clamp_min(
            min without(prediction_type)
            (
                label_replace(
                    last_over_time(anomaly:adaptive:avg_1h[2m]) - last_over_time(anomaly:adaptive:stddev_st[2m]) * on() group_left anomaly:adaptive:stddev_multiplier,
                    "prediction_type", "short_term", "", ""
                )
                or
                label_replace(
                    last_over_time(anomaly:adaptive:avg_1h[2m]) - last_over_time(anomaly:adaptive:avg_1h[2m]) * on() group_left anomaly:adaptive:margin_multiplier,
                    "prediction_type", "margin", "", ""
                )
                or
                last_over_time(anomaly:adaptive:lower_band_lt[10m])
            ),
            0
          )

      - record: anomaly:upper_band
        expr: |-
          max without(prediction_type)
          (
            label_replace(
                last_over_time(anomaly:adaptive:avg_1h[2m]) + last_over_time(anomaly:adaptive:stddev_st[2m]) * on() group_left anomaly:adaptive:stddev_multiplier,
                "prediction_type", "short_term", "", ""
            )
            or
            label_replace(
                last_over_time(anomaly:adaptive:avg_1h[2m]) + last_over_time(anomaly:adaptive:avg_1h[2m]) * on() group_left anomaly:adaptive:margin_multiplier,
                "prediction_type", "margin", "", ""
            )
            or
            last_over_time(anomaly:adaptive:upper_band_lt[10m])
          )

  # Long term bands are calculated by a different recording rule group with higher interval for efficiency reasons.
  # They are based on the same principles as short term bands, but with a lookback offset. They can be easily be extended to
  # incorporate other known seasonality patterns.
  # In order to avoid replicating expanded bands for a long period of time, they only take a 1h time window for the stddev.
  # TODO(@jcreixell): apply a gentle smoothing factor to prevent undesirable artifacts.
  - name: AnomalyAdaptiveLongTerm
    interval: 5m
    rules:
      - record: anomaly:adaptive:upper_band_lt
        expr: |-
          max without(look_back)
          (
            label_replace(
                avg_over_time(anomaly:adaptive:select[1h] offset 167h30m)
                +
                stddev_over_time(anomaly:adaptive:select[1h] offset 167h30m)
                        * on() group_left anomaly:adaptive:stddev_multiplier,
            "look_back", "1w", "", ""
            )
            or
            label_replace(
                avg_over_time(anomaly:adaptive:select[1h] offset 23h30m)
                +
                stddev_over_time(anomaly:adaptive:select[1h] offset 23h30m)
                        * on() group_left anomaly:adaptive:stddev_multiplier,
            "look_back", "1d", "", "" 
            )
          )

      - record: anomaly:adaptive:lower_band_lt
        expr: |-
          min without(look_back)
          (
            label_replace(
                        avg_over_time(anomaly:adaptive:select[1h] offset 167h30m)
                        -
                        stddev_over_time(anomaly:adaptive:select[1h] offset 167h30m)
                        * on() group_left anomaly:adaptive:stddev_multiplier,
            "look_back", "1w", "", ""
            )
            or
            label_replace(
                        avg_over_time(anomaly:adaptive:select[1h] offset 23h30m)
                        -
                        stddev_over_time(anomaly:adaptive:select[1h] offset 23h30m)
                        * on() group_left anomaly:adaptive:stddev_multiplier,
            "look_back", "1d", "", ""
            )
          )

  - name: AnomalyAdaptiveAlerts
    rules:

      ################################################################
      #                     Anomalies                                #
      ################################################################

      # Alert for anomalies based on standard deviation
      - alert: AnomalyDetected
        for: 5m
        expr: >
          last_over_time(anomaly:level[2m]) < last_over_time(anomaly:lower_band{anomaly_strategy="adaptive"}[2m])
          or
          last_over_time(anomaly:level[2m]) > last_over_time(anomaly:upper_band{anomaly_strategy="adaptive"}[2m])
        labels:
          severity: warning
          anomaly_strategy: adaptive
